// <auto-generated />

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;

namespace EduJournal.DAL.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210107173430_Email")]
    partial class Email
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("EduJournal.DAL.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("LecturerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("LecturerId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LecturerId = 2,
                            Name = "Chemistry"
                        },
                        new
                        {
                            Id = 2,
                            LecturerId = 3,
                            Name = "Math"
                        },
                        new
                        {
                            Id = 3,
                            LecturerId = 3,
                            Name = "English"
                        },
                        new
                        {
                            Id = 4,
                            LecturerId = 3,
                            Name = "Physics"
                        },
                        new
                        {
                            Id = 5,
                            LecturerId = 1,
                            Name = "Computer Science"
                        });
                });

            modelBuilder.Entity("EduJournal.DAL.Entities.JournalRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Attendance")
                        .HasColumnType("bit");

                    b.Property<int>("LectureId")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("LectureId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("JournalRecords");

                    b.HasCheckConstraint("CK_JournalRecords_Score", "[Attendance] = 0 AND [Score] = 0 OR [Attendance] = 1 AND [Score] BETWEEN 0 AND 5");
                });

            modelBuilder.Entity("EduJournal.DAL.Entities.Lecture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Lectures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Name = "Chemistry, lecture 1"
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 1,
                            Name = "Chemistry, lecture 2"
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 1,
                            Name = "Chemistry, lecture 3"
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 1,
                            Name = "Chemistry, lecture 4"
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 2,
                            Name = "Math, lecture 1"
                        },
                        new
                        {
                            Id = 6,
                            CourseId = 2,
                            Name = "Math, lecture 2"
                        },
                        new
                        {
                            Id = 7,
                            CourseId = 2,
                            Name = "Math, lecture 3"
                        },
                        new
                        {
                            Id = 8,
                            CourseId = 3,
                            Name = "English, lecture 1"
                        },
                        new
                        {
                            Id = 9,
                            CourseId = 3,
                            Name = "English, lecture 2"
                        },
                        new
                        {
                            Id = 10,
                            CourseId = 3,
                            Name = "English, lecture 3"
                        },
                        new
                        {
                            Id = 11,
                            CourseId = 4,
                            Name = "Physics, lecture 1"
                        },
                        new
                        {
                            Id = 12,
                            CourseId = 4,
                            Name = "Physics, lecture 2"
                        },
                        new
                        {
                            Id = 13,
                            CourseId = 4,
                            Name = "Physics, lecture 3"
                        },
                        new
                        {
                            Id = 14,
                            CourseId = 5,
                            Name = "Computer Science, lecture 1"
                        },
                        new
                        {
                            Id = 15,
                            CourseId = 5,
                            Name = "Computer Science, lecture 2"
                        },
                        new
                        {
                            Id = 16,
                            CourseId = 5,
                            Name = "Computer Science, lecture 3"
                        },
                        new
                        {
                            Id = 17,
                            CourseId = 5,
                            Name = "Computer Science, lecture 4"
                        });
                });

            modelBuilder.Entity("EduJournal.DAL.Entities.Lecturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Lecturers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "testm10lec@mail.ru",
                            FullName = "Patricia James"
                        },
                        new
                        {
                            Id = 2,
                            Email = "testm10lec@mail.ru",
                            FullName = "Phillip Ross"
                        },
                        new
                        {
                            Id = 3,
                            Email = "testm10lec@mail.ru",
                            FullName = "Paul Baker"
                        });
                });

            modelBuilder.Entity("EduJournal.DAL.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "testm10stud@mail.ru",
                            FullName = "Eric Jenkins"
                        },
                        new
                        {
                            Id = 2,
                            Email = "testm10stud@mail.ru",
                            FullName = "Brian White"
                        },
                        new
                        {
                            Id = 3,
                            Email = "testm10stud@mail.ru",
                            FullName = "Virginia Martinez"
                        },
                        new
                        {
                            Id = 4,
                            Email = "testm10stud@mail.ru",
                            FullName = "Amy Johnson"
                        },
                        new
                        {
                            Id = 5,
                            Email = "testm10stud@mail.ru",
                            FullName = "Terry Parker"
                        });
                });

            modelBuilder.Entity("EduJournal.DAL.Entities.Course", b =>
                {
                    b.HasOne("EduJournal.DAL.Entities.Lecturer", "Lecturer")
                        .WithMany("Courses")
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecturer");
                });

            modelBuilder.Entity("EduJournal.DAL.Entities.JournalRecord", b =>
                {
                    b.HasOne("EduJournal.DAL.Entities.Lecture", "Lecture")
                        .WithMany("JournalRecords")
                        .HasForeignKey("LectureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduJournal.DAL.Entities.Student", "Student")
                        .WithMany("JournalRecords")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecture");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EduJournal.DAL.Entities.Lecture", b =>
                {
                    b.HasOne("EduJournal.DAL.Entities.Course", "Course")
                        .WithMany("Lectures")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("EduJournal.DAL.Entities.Course", b =>
                {
                    b.Navigation("Lectures");
                });

            modelBuilder.Entity("EduJournal.DAL.Entities.Lecture", b =>
                {
                    b.Navigation("JournalRecords");
                });

            modelBuilder.Entity("EduJournal.DAL.Entities.Lecturer", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("EduJournal.DAL.Entities.Student", b =>
                {
                    b.Navigation("JournalRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
